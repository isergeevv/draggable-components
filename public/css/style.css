:root {
  --background: #ffffff;
  --foreground: #171717;
}

/* @media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
} */

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
  width: 100vw;
  height: 100vh;
}

main {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

/* Grid App */

.app-container {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.app-container > .app-grid {
  --app-size-ref: 100;

  --app-size: calc(var(--app-size-ref) * 1%);
  --app-pos: calc(((var(--app-size-ref) / 2) * var(--app-zoom)) * -1%);
  --app-translate: calc((var(--app-size-ref) / 2) * 1%);
  --app-bg-size: calc(var(--app-bg-grid-size) * 1px);

  position: relative;

  width: var(--app-size);
  height: var(--app-size);

  top: var(--app-pos);
  left: var(--app-pos);

  transform: translate(var(--app-translate), var(--app-translate));
  overflow: hidden;

  background-size: var(--app-bg-size) var(--app-bg-size);
  background-position: calc(var(--app-offset-x) * 1px) calc(var(--app-offset-y) * 1px);
  background-image: linear-gradient(to right, rgba(128, 128, 128, 0.3) 1px, transparent 1px),
    linear-gradient(to bottom, rgba(128, 128, 128, 0.3) 1px, transparent 1px);
  scale: var(--app-zoom);

  font-size: 5px;
}

.app-container > .app-panel {
  position: absolute;
  top: 0;
  left: 0;
  width: 200px;
  height: 100%;
  background-color: rgba(var(--app-panel-bg-color), 1);
  transform: translateX(-100%);

  transition: transform 0.3s ease-in-out;
  z-index: 10;
}
.app-container > .app-panel.open {
  transform: translateX(0);
}
.app-container > .app-panel.transparent {
  background-color: rgba(var(--app-panel-bg-color), 0.3);
  pointer-events: none;
}

.app-component {
  --app-component-pos-x: calc(((var(--app-offset-x) + var(--x)) * 1px));
  --app-component-pos-y: calc(((var(--app-offset-y) + var(--y)) * 1px));

  position: absolute;
  left: var(--app-component-pos-x);
  top: var(--app-component-pos-y);
  min-width: var(--app-bg-grid-size);
  background-color: var(--app-component-bg-color);
  color: var(--app-component-text-color);
}

.app-component > .app-component-connector {
  position: absolute;
  top: 0;
  width: 0.5rem;
  height: 100%;
  background-color: red;
  z-index: 1;
}
.app-component > .app-component-connector.app-component-connector-left {
  right: 100%;
}
.app-component > .app-component-connector.app-component-connector-right {
  left: 100%;
}

.app-connection {
  --app-connection-pos-x: calc(((var(--app-offset-x) + var(--x1)) * 1px));
  --app-connection-pos-y: calc(((var(--app-offset-y) + var(--y1)) * 1px));

  position: absolute;
  left: var(--app-connection-pos-x);
  top: var(--app-connection-pos-y);
  width: 1px;
  height: calc(var(--dist) * 1px);
  transform-origin: 0% 0%;
  rotate: calc(var(--deg) * 1deg);
  background-color: red;
}
.app-connection.moving {
  pointer-events: none;
}

/* Grid App Extra */

.app-component-block {
  border: 1px solid black;
  border-radius: 0.5rem;
  display: flex;
  flex-direction: column;
}
.app-component-block > .app-component-block-head {
  width: 100%;
  padding: 0.5rem;
  background-color: #5f5f5f;
}
.app-component-block > .app-component-block-body {
  width: 100%;
  padding: 0.5rem;
}

.app-group {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
